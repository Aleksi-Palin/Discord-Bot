vc = ctx.voice_client
    FFMPEG_OPTIONS = {'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
              'options': '-vn'}

    YDL_OPTIONS = {'format': "bestaudio",
          'quiet': True,
          'no_warnings':True,
          'default_search': 'auto',
          'postprocessors':[{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
          }],}
              

    with youtube_dl.YoutubeDL(YDL_OPTIONS) as ydl:
      info = ydl.extract_info(url, download=False)
      url2 = info['formats'][0]['url']
      source = await discord.FFmpegOpusAudio.from_probe(url2,**FFMPEG_OPTIONS)
      #vc.play(source)
      #await ctx.send("Now Playing!\n" + url)


      def start_playing(self, voice_client, player):

      self.queue[0] = player

      i = 0
      while i <  len(self.queue):
          try:
              voice_client.play(self.queue[i], after=lambda e: print('Player error: %s' % e) if e else None)

          except:
              pass
          i += 1






async def start_playing(self,ctx):
  client = ctx.voice_client
  
  url = queue.popleft()
  with youtube_dl.YoutubeDL(YDL_OPTIONS) as ydl:
      info = ydl.extract_info(url, download=False)
      url2 = info['formats'][0]['url']
      source = await discord.FFmpegOpusAudio.from_probe(url2,**FFMPEG_OPTIONS)
      client.play(source,after=lambda e: print('Player error: %s' % e) if e else None)

      await ctx.send("Now Playing!\n" + url)



vc = ctx.voice_client
    
    voice_channel = ctx.author.voice.channel  

    if(vc is None):
      await voice_channel.connect()
      vc = ctx.voice_client
    print(vc)

    try:
      if(vc.is_playing() == False):
        queue.append(url)
        await start_playing(self,ctx)
      elif(vc.is_playing() == True):
        queue.append(url)
        await ctx.send("Added to queue")

    except:
        await ctx.send("Somenthing went wrong - please try again later!")